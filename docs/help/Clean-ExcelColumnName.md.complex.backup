---
external help file: checkit-core-help.xml
Module Name: checkit-core
online version:
schema: 2.0.0
---
# Clean-ExcelColumnName

---
external help file: checkit-core-help.xml
Module Name: checkit-core
online version:
schema: 2.0.0
---

# Clean-ExcelColumnName

## SYNOPSIS

Sanitizes column names for Excel compatibility, especially for pivot tables and slicers.

## SYNTAX





Clean-ExcelColumnName [[-ColumnName] <String>] [-ProgressAction <ActionPreference>] [<CommonParameters>]





## DESCRIPTION

Transforms column names to ensure compatibility with Excel, particularly for features like
pivot tables and slicers that have strict naming requirements. This function applies several
transformations to make column names Excel-friendly:

1. Removes special characters that cause Excel issues
2. Replaces spaces with underscores for better slicer compatibility
3. Trims names to 31 characters (Excel's column name limit)
4. Ensures names aren't empty after cleaning

This function is automatically used by Export-ToExcel when processing column headers.
It can also be used directly when preparing data for Excel export in other contexts.

## EXAMPLES

### Example 1: Clean a single column name





Clean-ExcelColumnName -ColumnName "Product Name (Version 2.5)"
# Result: "Product_Name_Version_2.5"





Demonstrates basic column name cleaning by replacing spaces and special characters with underscores.

### Example 2: Clean an array of column names





$headers = @("User's Name", "Last Login (UTC)", "Department/Division", "Access Level")
$cleanHeaders = $headers | ForEach-Object { Clean-ExcelColumnName $_ }
# Results: "Users_Name", "Last_Login_UTC", "Department_Division", "Access_Level"





Shows how to clean multiple column names for Excel compatibility.

### Example 3: Handle long column names





Clean-ExcelColumnName -ColumnName "This is an extremely long column name that will be truncated to 31 characters"
# Result: "This_is_an_extremely_long_column_"





Demonstrates how column names longer than Excel's 31-character limit are truncated.

## PARAMETERS

### -ColumnName

The column name string to clean and make Excel-compatible.

```yaml
Type: String
Parameter Sets: (All)
Aliases:

Required: False
Position: 1
Default value: None
Accept pipeline input: True (ByValue)
Accept wildcard characters: False





### -ProgressAction

Controls the progress output as per PowerShell's common parameters.

```yaml
Type: ActionPreference
Parameter Sets: (All)
Aliases: proga

Required: False
Position: Named
Default value: None
Accept pipeline input: False
Accept wildcard characters: False





### CommonParameters
This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see [about_CommonParameters](http://go.microsoft.com/fwlink/?LinkID=113216).

## INPUTS

### None

This function does not accept pipeline input.

## OUTPUTS

### System.String

Returns the cleaned, Excel-compatible column name.

## NOTES

Excel has several limitations for column names in pivot tables and slicers:

- Maximum length: 31 characters
- No special characters like: *, %, $, #, &, etc.
- Spaces can cause issues with some Excel operations
- Names must be unique within a worksheet

The Clean-ExcelColumnName function handles all these requirements automatically.

## RELATED LINKS

[Export-ToExcel](Export-ToExcel.md)
[Invoke-Pivotizer](Invoke-Pivotizer.md)



